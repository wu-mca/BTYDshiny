{
    "collab_server" : "",
    "contents" : "library(BTYD)\nlibrary(shiny)\nlibrary(dplyr)\nlibrary(BTYDplus)\nlibrary(data.table)\nlibrary(ggplot2)\nlibrary(tidyr)\n#calibration period selection doesn't work(pnbd an error)\ncdnow <- data.table(read.csv(file = 'cdnow_elog.csv', stringsAsFactors = F))\ncdnow <- cdnow[, date := as.Date(date, '%Y-%m-%d')]\ncdnow <- cdnow[, first := min(date), by='cust']\ncdnow <- arrange(cdnow,date)\ncbs <- elog2cbs(cdnow,units = 'week', T.cal = as.Date('1997-09-30'))\ncbs<- as.data.frame(cbs_cdnow)\n\n#calibration period selection works\ngrocery <- data.table(read.csv(file = 'grocery-elog.csv', stringsAsFactors = F))\ngrocery <- arrange(grocery,date)\ngrocery$date <- as.Date(grocery$date)\ncbs_grocery <- elog2cbs(grocery, T.cal = as.Date('2006-12-31'), T.tot = as.Date('2007-12-31'))\ncbs_grocery <- as.data.frame(cbs_grocery)\n\ndonations  <- data.table(read.csv('donations-elog.csv', stringsAsFactors = F))\ndonations [, date := as.Date(date, format='%m/%d/%Y')]\ndonations [, first := min(date), by='cust']\ndonations  <- arrange(donations ,date)\ncbs_donations <- elog2cbs(donations , units='week', T.cal = as.Date('2005-07-01'), T.tot = as.Date('2006-07-01'))\n\n\n\nparams.mbgcnbd <- mbgcnbd.EstimateParameters(cbs_grocery)\nparams.pnbd <- BTYD::pnbd.EstimateParameters(cbs_grocery, max.param.value = 100)\nparams.bgnbd <- BTYD::bgnbd.EstimateParameters(cbs_grocery)\nparams.mbgnbd <- mbgnbd.EstimateParameters(cbs_grocery)\n\n\n\n\n\n\nmeasures <- c(\n    \"MAE\" = function(a, f) mean(abs(a - f)),\n    \"MSLE\" = function(a, f) mean(((log(a + 1) - log(f + 1)))^2),\n    \"BIAS\" = function(a, f) sum(f)/sum(a) - 1)\nmodels <- c(\n    \"NBD\" = \"nbd\",\n    \"Pareto/NBD\" = \"pnbd\",\n    \"BG/CNBD-k\" = \"bgcnbd\",\n    \"MBG/CNBD-k\" = \"mbgcnbd\")\n\na <-sapply(measures, function(measure) {\n    sapply(models, function(model) {\n        err <- do.call(measure, list(a = cbs$x.star, f = cbs[[paste0(\"xstar.\", model)]]))\n        round(err, 3)\n    })\n})\n\n#Table 1 - descriptive stats:\n\n#a)dataset\ndataset <- c(\"CDs\",\"Grocery\",\"Donations\")\n#b)Cohort size\ncoh.size <- c(nrow(cbs_cdnow),nrow(cbs_grocery),nrow(cbs_donations))\n#c)Period length in weeks(Calibration)\nper.length.cal <- c(round(max(cbs_cdnow$T.cal)),round(max(cbs_grocery$T.cal)),round(max(cbs_donations$T.cal)))\n#d)Period length in weeks(holdout)\nper.length.hold <- c(round(cbs_cdnow$T.star[1]),round(cbs_grocery$T.star[1]),round(cbs_donations$T.star[1]))\n#e)share of inactive customer(calibr)\nsh.in.cust.cal <- c(round(sum(cbs_cdnow$x == 0)/nrow(cbs_cdnow),2),round(sum(cbs_grocery$x == 0)/nrow(cbs_grocery),2),\n                round(sum(cbs_donations$x == 0)/nrow(cbs_donations),2))\n#f)share of inactive customer(holdout)\nsh.in.cust.hold <- c(round(sum(cbs_cdnow$x.star == 0)/nrow(cbs_cdnow),2),round(sum(cbs_grocery$x.star == 0)/nrow(cbs_grocery),2),\n                    round(sum(cbs_donations$x.star == 0)/nrow(cbs_donations),2))\n#g)share of customers with 4 or > transactions(calibration)\nsh.cust.4.plus.cal <- c(round((sum(cbs_cdnow$x >=4)/nrow(cbs_cdnow)),2),round(sum((cbs_grocery$x >=4)/nrow(cbs_grocery)),2),round(sum((cbs_donations$x >=4)/nrow(cbs_donations)),2))\n#h)share of customers with 4 or > transactions(holdout)\nsh.cust.4.plus.hold <- c(round((sum(cbs_cdnow$x.star >=4)/nrow(cbs_cdnow)),2),round(sum((cbs_grocery$x.star >=4)/nrow(cbs_grocery)),2),round(sum((cbs_donations$x.star >=4)/nrow(cbs_donations)),2))\n#i)mean 0f number of purchases(calibr)\nnum.purch.cal <- c(round(mean(cbs_cdnow$x),2),round(mean(cbs_grocery$x),2),round(mean(cbs_donations$x),2))\n#j)mean 0f number of purchases(holdout)\nnum.purch.hold <- c(round(mean(cbs_cdnow$x.star),2),round(mean(cbs_grocery$x.star),2),round(mean(cbs_donations$x.star),2))\n#k)mean 0f number of purchases active cust(calibr)\nnum.purch.cal.act <- c(round(mean(cbs_cdnow$x[cbs_cdnow$x>0]),2),round(mean(cbs_grocery$x[cbs_grocery$x>0]),2),round(mean(cbs_donations$x[cbs_donations$x>0]),2))\n#l)mean 0f number of purchases active cust(hold)\nnum.purch.hold.act <- c(round(mean(cbs_cdnow$x.star[cbs_cdnow$x.star>0]),2),round(mean(cbs_grocery$x.star[cbs_grocery$x.star>0]),2),round(mean(cbs_donations$x.star[cbs_donations$x.star>0]),2))\n#m)wheat\nwheat <- c(round(estimateRegularity(cdnow, method = \"wheat\",plot = FALSE),2),round(estimateRegularity(grocery, method = \"wheat\",plot = FALSE),2),round(estimateRegularity(donations, method = \"wheat\",plot = FALSE),2))\n\n\ndes_stat <- c()\ndes_stat<- cbind(des_stat,dataset,coh.size,per.length.cal,per.length.hold,sh.in.cust.cal,sh.in.cust.hold,\n                    sh.cust.4.plus.cal,sh.cust.4.plus.hold,num.purch.cal,num.purch.hold,\n                    num.purch.cal.act,num.purch.hold.act,wheat)\n\ndes_stat <- as.data.frame(des_stat)\nDF <- data.frame()\ndes_stat <- data.frame(lapply(des_stat, as.character), stringsAsFactors=FALSE)\n\nd <- cbind(des_stat[1:2], do.call(cbind, lapply(c(3,5,7,9,11,13), function(i) do.call(paste, c(des_stat[i:(i+1)], sep=\"/\")))))\ncolnames(d) <- c(\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",'8')\n\n\noutput$rec_trans <-renderPlot({\n    if(input$Data == \"CDNOW\"){\n        if(input$Model == \"ParetoNBD\"){\n            cbs_cdnow <- data()[[1]]\n            params.pnbd <- BTYD::pnbd.EstimateParameters(cbs_cdnow,max.param.value = 100)\n\n        }else if(input$Model == \"BG/NBD\"){\n            cbs_cdnow <- data()[[1]]\n            params.bgnbd <- BTYD::bgnbd.EstimateParameters(cbs_cdnow)\n\n        }else if(input$Model == \"MBG/NBD\"){\n            cbs_cdnow <- data()[[1]]\n            params.mbgnbd <- mbgnbd.EstimateParameters(cbs_cdnow)\n\n        }else if(input$Model == \"MBG/CNBD-k\"){\n            cbs_cdnow <- data()[[1]]\n            params.mbgcnbd <- mbgcnbd.EstimateParameters(cbs_cdnow)\n\n        }\n    }else if(input$Data == \"Grocery\"){\n        if(input$Model == \"ParetoNBD\"){\n            cbs_grocery <- data()[[2]]\n            params.pnbd <- BTYD::pnbd.EstimateParameters(cbs_grocery,max.param.value = 100)\n\n        }else if(input$Model == \"BG/NBD\"){\n            cbs_grocery <- data()[[2]]\n            params.bgnbd <- BTYD::bgnbd.EstimateParameters(cbs_grocery)\n\n        }else if(input$Model == \"MBG/NBD\"){\n            cbs_grocery <- data()[[2]]\n            params.mbgnbd <- mbgnbd.EstimateParameters(cbs_grocery)\n\n        }else if(input$Model == \"MBG/CNBD-k\"){\n            cbs_grocery <- data()[[2]]\n            params.mbgcnbd <- mbgcnbd.EstimateParameters(cbs_grocery)\n\n        }\n    }else if(input$Data == \"Donations\"){\n        if(input$Model == \"ParetoNBD\"){\n            cbs_donations <- data()[[3]]\n            params.pnbd <- BTYD::pnbd.EstimateParameters(cbs_donations,max.param.value = 100)\n\n        }else if(input$Model == \"BG/NBD\"){\n            cbs_donations <- data()[[3]]\n            params.bgnbd <- BTYD::bgnbd.EstimateParameters(cbs_donations)\n\n        }else if(input$Model == \"MBG/NBD\"){\n            cbs_donations <- data()[[3]]\n            params.mbgnbd <- mbgnbd.EstimateParameters(cbs_donations)\n\n        }else if(input$Model == \"MBG/CNBD-k\"){\n            cbs_donations <- data()[[3]]\n            params.mbgcnbd <- mbgcnbd.EstimateParameters(cbs_donations)\n\n        }\n    }\n})\n\nparams.pnbd <- BTYD::pnbd.EstimateParameters(cbs_grocery,max.param.value = 100)\npalive.pnbd <- BTYD::pnbd.PAlive(params = params.pnbd, cbs_donations$x, cbs_donations$t.x, cbs_donations$T.cal)\nplot <- ggplot(as.data.frame(palive.pnbd),aes(x=palive.pnbd))+\n    geom_histogram(binwidth =0.01,colour=\"black\",fill=\"orange\")+\n    ylab(\"Number of Customers\")+\n    xlab(\"Probability Customer is 'Live'\")+\n    theme_minimal()\nplot\n\nparams.bgnbd <- BTYD::bgnbd.EstimateParameters(cbs_donations)\npalive.bgnbd <- BTYD::bgnbd.PAlive(params = params.bgnbd, cbs_donations$x, cbs_donations$t.x, cbs_donations$T.cal)\nplot <- ggplot(as.data.frame(palive.bgnbd),aes(x=palive.bgnbd))+\n    geom_histogram(binwidth =0.01,colour=\"black\",fill=\"orange\")+\n    ylab(\"Number of Customers\")+\n    xlab(\"Probability Customer is 'Live'\")+\n    theme_minimal()\nplot\n\npnbd.PlotFreqVsConditionalExpectedFrequency(params.pnbd,cbs_cdnow$T.star,cbs_cdnow,cbs_cdnow$x.star,censor =7)\nbgnbd.PlotFreqVsConditionalExpectedFrequency(params.bgnbd,cbs_cdnow$T.star,cbs_cdnow,cbs_cdnow$x.star,censor =7)\n\npnbd.PlotTrackingCum\npnbd.PlotTrackingInc\n\n\npnbd.PlotTrackingInc(params.pnbd,cbs_cdnow$T.cal,T.tot = 78,actual.inc.tracking.data =elog2inc(cdnow))\npnbd.PlotTrackingInc(params.pnbd,cbs_grocery$T.cal,T.tot = 104,actual.inc.tracking.data =elog2inc(grocery))\npnbd.PlotTrackingInc(params.pnbd,cbs_donations$T.cal,T.tot = 234,actual.inc.tracking.data =elog2inc(donations))\n\npnbd.PlotTrackingCum(params.pnbd,cbs_cdnow$T.cal,T.tot = 78,actual.inc.tracking.data =elog2cum(cdnow))\npnbd.PlotTrackingCum(params.pnbd,cbs_grocery$T.cal,T.tot = 104,actual.inc.tracking.data =elog2cum(grocery))\npnbd.PlotTrackingCum(params.pnbd,cbs_donations$T.cal,T.tot = 234,actual.inc.tracking.data =elog2cum(donations))\n\n\n\nbgnbd.PlotTrackingInc(params.bgnbd,cbs_cdnow$T.cal,T.tot = 78,actual.inc.tracking.data =elog2inc(cdnow))\nbgnbd.PlotTrackingInc(params.bgnbd,cbs_grocery$T.cal,T.tot = 104,actual.inc.tracking.data =elog2inc(grocery))\nbgnbd.PlotTrackingInc(params.bgnbd,cbs_donations$T.cal,T.tot = 234,actual.inc.tracking.data =elog2inc(donations))\n\nbgnbd.PlotTrackingCum(params.bgnbd,cbs_cdnow$T.cal,T.tot = 78,actual.inc.tracking.data =elog2cum(cdnow))\nbgnbd.PlotTrackingCum(params.bgnbd,cbs_grocery$T.cal,T.tot = 104,actual.inc.tracking.data =elog2cum(grocery))\nbgnbd.PlotTrackingCum(params.bgnbd,cbs_donations$T.cal,T.tot = 234,actual.inc.tracking.data =elog2cum(donations))\n\n\n\nmbgcnbd.PlotTrackingInc(params.mbgcnbd,cbs_cdnow$T.cal,T.tot = 78,actual.inc.tracking.data =elog2inc(cdnow))\nmbgcnbd.PlotTrackingInc(params.mbgcnbd,cbs_grocery$T.cal,T.tot = 104,actual.inc.tracking.data =elog2inc(grocery))\nmbgcnbd.PlotTrackingInc(params.mbgcnbd,cbs_donations$T.cal,T.tot = 234,actual.inc.tracking.data =elog2inc(donations))\n\nmbgcnbd.PlotTrackingCum(params.mbgcnbd,cbs_cdnow$T.cal,T.tot = 78,actual.inc.tracking.data =elog2cum(cdnow))\nmbgcnbd.PlotTrackingCum(params.mbgcnbd,cbs_grocery$T.cal,T.tot = 104,actual.inc.tracking.data =elog2cum(grocery))\nmbgcnbd.PlotTrackingCum(params.mbgcnbd,cbs_donations$T.cal,T.tot = 234,actual.inc.tracking.data =elog2cum(donations))\n\n\nelog2inc(cdnow)\n\n#\"-top 5, middle 5, bottom 5 as CBS tables, with estimated columns add and highlighted (palive, xstar_estimated, sales.avg estimated, sales_estimated) - sorted by sales_estimated or by xstar_estimated\n\npalive <- pnbd.PAlive()\ncbs_donations$xstar.pnbd <- BTYD::pnbd.ConditionalExpectedTransactions(\n         params  = params.pnbd,\n         T.star  = cbs_grocery$T.star,\n         x       = cbs_grocery$x,\n         t.x     = cbs_grocery$t.x,\n         T.cal   = cbs_grocery$T.cal)\n\n\n",
    "created" : 1479372969280.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "467432001",
    "id" : "693667A4",
    "lastKnownWriteTime" : 1479468385,
    "last_content_update" : 1479468385404,
    "path" : "C:/Users/Daniil/Desktop/Programming/R/Work/shiny_project/help_code_shiny.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}